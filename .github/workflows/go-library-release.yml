name: Release Library Workflow

permissions:
  contents: write
  packages: write

on:
  workflow_call:
    inputs:
      previous_tag:
        description: 'Previous Tag (e.g., v1.0.0)'
        required: false
        type: string
      new_tag:
        description: 'New Tag (e.g., v1.0.1)'
        required: true
        type: string

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: master

      - name: Generate Release Notes
        id: generate_release_notes
        run: |
          echo "## What's Changed" > release_notes.md
          if [ -z "${{ inputs.previous_tag }}" ]; then
            git log --oneline --no-merges --decorate=short > release_notes.md
          else
            git log --oneline --no-merges --decorate=short ${{ inputs.previous_tag }}..HEAD >> release_notes.md
          fi
          cat release_notes.md

      - name: Check if tag is prerelease
        id: check_prerelease
        run: |
          if [[ "${{ inputs.new_tag }}" == *-beta* || "${{ inputs.new_tag }}" == *-alpha* ]]; then
            echo "prerelease=true" >> $GITHUB_ENV
          else
            echo "prerelease=false" >> $GITHUB_ENV
          fi

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ inputs.new_tag }}
          release_name: Release ${{ inputs.new_tag }}
          body_path: release_notes.md
          draft: false
          prerelease: ${{ env.prerelease }}

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.NEW_VERSION }}
          release_name: Release ${{ env.NEW_VERSION }}
          body_path: release_notes.md
          draft: false
          prerelease: ${{ env.prerelease }}